# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-01-03 08:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import marketing.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ERP', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('HR', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CallCampaignItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('persuing', 'persuing'), ('interested', 'interested'), ('proposal', 'proposal'), ('converted', 'converted')], default='persuing', max_length=100)),
                ('attempted', models.BooleanField(default=False)),
                ('attempt', models.FloatField(default=0)),
                ('followUp', models.BooleanField(default=False)),
                ('followUpDate', models.DateTimeField(null=True)),
                ('skipped', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(choices=[('created', 'created'), ('started', 'started'), ('closed', 'closed')], default='created', max_length=15)),
                ('typ', models.CharField(choices=[('email', 'email'), ('sms', 'sms'), ('call', 'call')], max_length=10, null=True)),
                ('msgBody', models.TextField(blank=True, max_length=1000, null=True)),
                ('emailSubject', models.TextField(blank=True, max_length=1000, null=True)),
                ('emailBody', models.TextField(blank=True, max_length=10000, null=True)),
                ('directions', models.TextField(blank=True, max_length=10000, null=True)),
                ('emailTemplate', models.CharField(blank=True, max_length=100, null=True)),
                ('limitPerDay', models.FloatField(default=10)),
                ('followUpText1', models.TextField(max_length=10000, null=True)),
                ('followUpText2', models.TextField(max_length=10000, null=True)),
                ('followUpText3', models.TextField(max_length=10000, null=True)),
                ('followUpText4', models.TextField(max_length=10000, null=True)),
                ('lead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaignlead', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaignteam', to='HR.Team')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('followupDate', models.DateTimeField(blank=True, null=True)),
                ('data', models.CharField(blank=True, max_length=1000, null=True)),
                ('typ', models.CharField(choices=[('inbound', 'inbound'), ('outbound', 'smoutbounds'), ('emailSent', 'emailSent'), ('emailRecieved', 'emailRecieved'), ('smsSent', 'smsSent'), ('smsRecieved', 'smsRecieved'), ('followup', 'followup'), ('comment', 'comment'), ('closed', 'closed'), ('converted', 'converted')], max_length=20, null=True)),
                ('recording', models.FileField(null=True, upload_to=marketing.models.campaignItemSavePath)),
                ('recording2', models.FileField(null=True, upload_to=marketing.models.campaignItemSavePath)),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CampaignLogs', to='marketing.Campaign')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaignId', models.CharField(max_length=10, null=True)),
                ('read', models.BooleanField(default=False)),
                ('open', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
                ('to', models.CharField(max_length=100, null=True)),
                ('slot', models.CharField(max_length=10, null=True)),
                ('template', models.TextField(max_length=500, null=True)),
                ('context', models.TextField(max_length=1000, null=True)),
                ('name', models.CharField(max_length=10, null=True)),
                ('subject', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('referenceId', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('source', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, max_length=500, null=True)),
                ('pinCode', models.CharField(max_length=10, null=True)),
                ('subscribe', models.BooleanField(default=False)),
                ('about', models.TextField(blank=True, max_length=4500, null=True)),
                ('addrs', models.TextField(blank=True, max_length=500, null=True)),
                ('altNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('altNumber2', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.TextField(blank=True, max_length=500, null=True)),
                ('companyName', models.TextField(blank=True, max_length=500, null=True)),
                ('country', models.TextField(blank=True, max_length=500, null=True)),
                ('directNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('lang', models.CharField(blank=True, max_length=20, null=True)),
                ('socialLink', models.TextField(blank=True, max_length=300, null=True)),
                ('state', models.TextField(blank=True, max_length=500, null=True)),
                ('website', models.TextField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailCampaignItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('emailed', models.BooleanField(default=False)),
                ('opened', models.BooleanField(default=False)),
                ('openedTime', models.DateTimeField(null=True)),
                ('key', models.CharField(blank=True, max_length=100, null=True)),
                ('read', models.BooleanField(default=False)),
                ('slot', models.CharField(max_length=10, null=True)),
                ('context', models.TextField(max_length=1000, null=True)),
                ('subject1', models.CharField(max_length=300, null=True)),
                ('body1', models.TextField(max_length=10000, null=True)),
                ('subject2', models.CharField(max_length=300, null=True)),
                ('body2', models.TextField(max_length=10000, null=True)),
                ('subject3', models.CharField(max_length=300, null=True)),
                ('body3', models.TextField(max_length=10000, null=True)),
                ('subject4', models.CharField(max_length=300, null=True)),
                ('body4', models.TextField(max_length=10000, null=True)),
                ('subject5', models.CharField(max_length=300, null=True)),
                ('body5', models.TextField(max_length=10000, null=True)),
                ('level', models.CharField(max_length=100, null=True)),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emailitems', to='marketing.Campaign')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emailcontacts', to='marketing.Contacts')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=60, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TourPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('ta', models.FloatField(default=0, null=True)),
                ('da', models.FloatField(default=0, null=True)),
                ('amount', models.FloatField(default=0, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('attachment', models.FileField(null=True, upload_to=marketing.models.getAttachmentPath)),
                ('status', models.CharField(choices=[('created', 'created'), ('sent_for_approval', 'sent_for_approval'), ('approved', 'approved'), ('rejected', 'rejected')], default='created', max_length=15)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tourplanner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TourPlanStop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('comments', models.TextField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(choices=[('assigned', 'assigned'), ('ongoing', 'ongoing'), ('postponed', 'postponed'), ('completed', 'completed'), ('upcoming', 'upcoming'), ('cancelled', 'cancelled')], default='assigned', max_length=20)),
                ('timeslot', models.CharField(max_length=10, null=True)),
                ('visit_date', models.DateField(null=True)),
                ('is_postponded', models.BooleanField(default=False)),
                ('name', models.TextField(blank=True, max_length=500, null=True)),
                ('street', models.TextField(blank=True, max_length=500, null=True)),
                ('pinCode', models.CharField(max_length=10, null=True)),
                ('city', models.TextField(blank=True, max_length=500, null=True)),
                ('state', models.TextField(blank=True, max_length=500, null=True)),
                ('country', models.TextField(blank=True, max_length=500, null=True)),
                ('lat', models.CharField(blank=True, max_length=20, null=True)),
                ('lon', models.CharField(blank=True, max_length=20, null=True)),
                ('assignedBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobsCreated', to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='divisionTourplanStop', to='ERP.Division')),
                ('tourplan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TourPlan', to='marketing.TourPlan')),
            ],
        ),
        migrations.AddField(
            model_name='contacts',
            name='tags',
            field=models.ManyToManyField(related_name='contacts', to='marketing.Tag'),
        ),
        migrations.AddField(
            model_name='campaignlogs',
            name='contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CampaignLogs', to='marketing.Contacts'),
        ),
        migrations.AddField(
            model_name='campaignlogs',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CampaignLogs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='callcampaignitem',
            name='campaign',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='callitems', to='marketing.Campaign'),
        ),
        migrations.AddField(
            model_name='callcampaignitem',
            name='contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='callcontacts', to='marketing.Contacts'),
        ),
        migrations.AddField(
            model_name='callcampaignitem',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contactsApproaching', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='tourplan',
            unique_together=set([('date', 'user')]),
        ),
    ]
