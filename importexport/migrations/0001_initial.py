# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-01-03 08:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import importexport.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ERP', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('quantity1', models.PositiveIntegerField(default=0, null=True)),
                ('quantity2', models.PositiveIntegerField(default=0, null=True)),
                ('price', models.FloatField(null=True)),
                ('landed_price', models.FloatField(default=0, null=True)),
                ('invoice_price', models.FloatField(default=0, null=True)),
                ('customer_price', models.FloatField(default=0, null=True)),
                ('gst', models.FloatField(default=0, null=True)),
                ('custom', models.FloatField(default=0, null=True)),
                ('customs_no', models.PositiveIntegerField(default=0, null=True)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='boms', to='ERP.Division')),
            ],
        ),
        migrations.CreateModel(
            name='ComplaintManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('complaintRef', models.CharField(blank=True, max_length=50, null=True)),
                ('machine', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, max_length=2000, null=True)),
                ('complaintType', models.CharField(choices=[('Mechanical', 'Mechanical'), ('Electrical', 'Electrical'), ('ElectroMechanical', 'ElectroMechanical'), ('Other', 'Other')], max_length=250, null=True)),
                ('errorCode', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Sent for closing approval', 'Sent for closing approval')], max_length=250, null=True)),
                ('is_CloseApproved', models.BooleanField(default=False)),
                ('serviceReportNo', models.CharField(blank=True, max_length=50, null=True)),
                ('attr1', models.TextField(blank=True, max_length=2000, null=True)),
                ('attr2', models.TextField(blank=True, max_length=2000, null=True)),
                ('attr3', models.TextField(blank=True, max_length=2000, null=True)),
                ('machineRunning', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('closedDate', models.DateField(null=True)),
                ('RefurbishedBind', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('closedBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closedByuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryChallan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('customername', models.CharField(blank=True, max_length=50, null=True)),
                ('customeraddress', models.CharField(blank=True, max_length=200, null=True)),
                ('customergst', models.CharField(blank=True, max_length=200, null=True)),
                ('heading', models.CharField(blank=True, max_length=200, null=True)),
                ('challanNo', models.CharField(blank=True, max_length=20, null=True)),
                ('challanDate', models.DateField(null=True)),
                ('deliveryThr', models.CharField(blank=True, max_length=50, null=True)),
                ('refNo', models.CharField(blank=True, max_length=50, null=True)),
                ('apprx', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.CharField(blank=True, max_length=500, null=True)),
                ('flag', models.BooleanField(default=False)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliveryChallans', to='ERP.Division')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('qty', models.PositiveIntegerField(default=0, null=True)),
                ('addedqty', models.PositiveIntegerField(default=0, null=True)),
                ('rate', models.FloatField(null=True)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='ERP.Division')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('invoiceNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('invoiceDate', models.DateField(null=True)),
                ('poNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('insuranceNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('transporter', models.CharField(blank=True, max_length=50, null=True)),
                ('lrNo', models.CharField(blank=True, max_length=50, null=True)),
                ('billName', models.CharField(blank=True, max_length=50, null=True)),
                ('shipName', models.CharField(blank=True, max_length=50, null=True)),
                ('billAddress', models.CharField(blank=True, max_length=200, null=True)),
                ('shipAddress', models.CharField(blank=True, max_length=200, null=True)),
                ('billGst', models.CharField(blank=True, max_length=50, null=True)),
                ('shipGst', models.CharField(blank=True, max_length=50, null=True)),
                ('billState', models.CharField(blank=True, max_length=50, null=True)),
                ('shipState', models.CharField(blank=True, max_length=50, null=True)),
                ('billCode', models.CharField(blank=True, max_length=20, null=True)),
                ('shipCode', models.CharField(blank=True, max_length=20, null=True)),
                ('isDetails', models.BooleanField(default=False)),
                ('invoiceTerms', models.CharField(blank=True, max_length=200, null=True)),
                ('flag', models.BooleanField(default=False)),
                ('comm_nr', models.CharField(blank=True, max_length=100, null=True)),
                ('packing', models.TextField(blank=True, max_length=2000, null=True)),
                ('lockInvoice', models.BooleanField(default=False)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='ERP.Division')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceQty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('part_no', models.CharField(blank=True, max_length=20, null=True)),
                ('description_1', models.CharField(blank=True, max_length=200, null=True)),
                ('customs_no', models.CharField(blank=True, max_length=20, null=True)),
                ('price', models.FloatField(default=0, null=True)),
                ('qty', models.PositiveIntegerField(default=0, null=True)),
                ('taxableprice', models.FloatField(default=0, null=True)),
                ('cgst', models.FloatField(default=0, null=True)),
                ('cgstVal', models.FloatField(default=0, null=True)),
                ('sgst', models.FloatField(default=0, null=True)),
                ('sgstVal', models.FloatField(default=0, null=True)),
                ('igst', models.FloatField(default=0, null=True)),
                ('igstVal', models.FloatField(default=0, null=True)),
                ('total', models.FloatField(default=0, null=True)),
                ('invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Invoice')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('qty', models.PositiveIntegerField(default=0, null=True)),
                ('price', models.FloatField(null=True)),
                ('stock', models.CharField(blank=True, max_length=500, null=True)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materialIssues', to='ERP.Division')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialIssueMain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materialIssueMain', to='ERP.Division')),
                ('materialIssue', models.ManyToManyField(related_name='materialqty', to='importexport.MaterialIssue')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('part_no', models.CharField(max_length=20, null=True, unique=True)),
                ('description_1', models.TextField(blank=True, max_length=2000, null=True)),
                ('description_2', models.TextField(blank=True, max_length=2000, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('replaced', models.CharField(max_length=200, null=True)),
                ('customs_no', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('bar_code', models.CharField(blank=True, max_length=50, null=True)),
                ('gst', models.FloatField(default=18.0)),
                ('custom', models.FloatField(default=0.0)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parentProduct', to='importexport.Products')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('sheet', models.FileField(null=True, upload_to=importexport.models.getUploadedProductSheets)),
                ('file_name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=20)),
                ('date', models.DateField(null=True)),
                ('machinemodel', models.CharField(blank=True, max_length=20, null=True)),
                ('comm_nr', models.CharField(blank=True, default='null', max_length=20)),
                ('quote_ref', models.CharField(blank=True, max_length=50, null=True)),
                ('enquiry_ref', models.CharField(blank=True, max_length=50, null=True)),
                ('approved1', models.BooleanField(default=False)),
                ('approved2', models.BooleanField(default=False)),
                ('approved1_date', models.DateField(null=True)),
                ('approved2_date', models.DateField(null=True)),
                ('status', models.CharField(choices=[('created', 'created'), ('sent_for_approval', 'sent_for_approval'), ('approved', 'approved'), ('ongoing', 'ongoing'), ('archieve', 'archieve')], default='created', max_length=100)),
                ('revision', models.CharField(default=1, max_length=20)),
                ('savedStatus', models.BooleanField(default=False)),
                ('invoiceValue', models.FloatField(null=True)),
                ('packing', models.FloatField(default=0)),
                ('insurance', models.FloatField(default=0)),
                ('freight', models.FloatField(default=0)),
                ('assessableValue', models.FloatField(default=0)),
                ('gst1', models.FloatField(default=0)),
                ('gst2', models.FloatField(default=0)),
                ('clearingCharges1', models.FloatField(default=0)),
                ('clearingCharges2', models.FloatField(default=0)),
                ('exRate', models.FloatField(default=75)),
                ('profitMargin', models.FloatField(default=0)),
                ('poNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('poDate', models.DateField(null=True)),
                ('invoiceNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('boeRefNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('quoteRefNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('quoteDate', models.DateField(null=True)),
                ('quoteValidity', models.CharField(default='30 days from quote date', max_length=200)),
                ('terms', models.CharField(default='EX-WORKS, BRUDERER AG, Switzerland', max_length=200)),
                ('termspo', models.CharField(default='EX-WORKS, BRUDERER AG, Switzerland', max_length=200)),
                ('delivery', models.CharField(default='6 weeks from the date of receipt of PO and advance', max_length=200)),
                ('paymentTerms', models.CharField(default='100% advance along with order', max_length=200)),
                ('paymentTerms1', models.CharField(default='100% advance along with order', max_length=200)),
                ('junkStatus', models.BooleanField(default=False)),
                ('shipmentMode', models.CharField(default='Road', max_length=200)),
                ('shipmentDetails', models.CharField(default='Freight forwarder -', max_length=200)),
                ('weightValue', models.FloatField(default=0)),
                ('quoteNotes', models.CharField(blank=True, max_length=500, null=True)),
                ('poNotes', models.CharField(blank=True, max_length=500, null=True)),
                ('currency', models.CharField(choices=[('CHF', 'CHF'), ('INR', 'INR'), ('EUR', 'EUR'), ('USD', 'USD'), ('JPY', 'JPY'), ('GBP', 'GBP'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('ZAR', 'ZAR')], default='CHF', max_length=10)),
                ('grnDate', models.DateField(null=True)),
                ('flag', models.BooleanField(default=False)),
                ('approved1_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approveduser1', to=settings.AUTH_USER_MODEL)),
                ('approved2_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approveduser2', to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='ERP.Division')),
                ('responsible', models.ManyToManyField(blank=True, related_name='managingService', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service', to='ERP.service')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectStockSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('value', models.FloatField(default=0, null=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('comm_nr', models.CharField(max_length=100, null=True)),
                ('flag', models.BooleanField(default=False)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projectStockSummaries', to='ERP.Division')),
            ],
        ),
        migrations.CreateModel(
            name='StockCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('count', models.PositiveIntegerField(default=0, null=True)),
                ('status', models.CharField(choices=[('live', 'live'), ('completed', 'completed')], default='live', max_length=10)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stockChecks', to='ERP.Division')),
                ('inventory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Inventory')),
            ],
        ),
        migrations.CreateModel(
            name='StockCheckItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=0, null=True)),
                ('matching', models.BooleanField(default=False)),
                ('flag', models.BooleanField(default=False)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Products')),
            ],
        ),
        migrations.CreateModel(
            name='StockCheckLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.StockCheck')),
            ],
        ),
        migrations.CreateModel(
            name='StockCheckReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('flag', models.BooleanField(default=False)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stockCheckReports', to='ERP.Division')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='useradded', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockSummaryReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('dated', models.DateField(null=True, unique=True)),
                ('stockValue', models.FloatField(default=0, null=True)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StockSummaryReports', to='ERP.Division')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('personName', models.CharField(max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('gst', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='ERP.Division')),
            ],
        ),
        migrations.AddField(
            model_name='stockcheckitem',
            name='stockReport',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stockreportDetails', to='importexport.StockCheckReport'),
        ),
        migrations.AddField(
            model_name='projectstocksummary',
            name='stockReport',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projectStockReport', to='importexport.StockSummaryReport'),
        ),
        migrations.AddField(
            model_name='projects',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to='importexport.Vendor'),
        ),
        migrations.AddField(
            model_name='products',
            name='sheet',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='productsSheet', to='importexport.ProductSheet'),
        ),
        migrations.AddField(
            model_name='materialissuemain',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materialproject', to='importexport.Projects'),
        ),
        migrations.AddField(
            model_name='materialissuemain',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materialuser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='materialissue',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Products'),
        ),
        migrations.AddField(
            model_name='invoiceqty',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Products'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Projects'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Products'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Projects'),
        ),
        migrations.AddField(
            model_name='deliverychallan',
            name='materialIssue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.MaterialIssueMain'),
        ),
        migrations.AddField(
            model_name='complaintmanagement',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lastnamee', to='importexport.Vendor'),
        ),
        migrations.AddField(
            model_name='complaintmanagement',
            name='division',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='ERP.Division'),
        ),
        migrations.AddField(
            model_name='complaintmanagement',
            name='registeredBy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usernamee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bom',
            name='products',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Products'),
        ),
        migrations.AddField(
            model_name='bom',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='importexport.Projects'),
        ),
        migrations.AddField(
            model_name='bom',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usersBoM', to=settings.AUTH_USER_MODEL),
        ),
    ]
